{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  amount: 1\n};\nexport const getUserAccount = createAsyncThunk('account/getUser', async (userId, thunkAPI) => {\n  const {\n    data\n  } = await axios.get(`https://dummyjson.com/products /${userId}`);\n  return data.amount;\n});\nexport const accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.amount += 1; //immer library\n    },\n\n    decrement: state => {\n      state.amount -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.amount += action.payload;\n    }\n  }\n  //   extraReducers: (builder) => {\n  //     builder\n  //       .addCase(getUserAccount.fulfilled, (state, action) => {\n  //         state.amount = action.payload;\n  //         state.pending = false;\n  //       })\n  //       .addCase(getUserAccount.pending, (state, action) => {\n  //         state.pending = true;\n  //       })\n  //       .addCase(getUserAccount.rejected, (state, action) => {\n  //         state.error = action.error;\n  //       });\n  //   },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = accountSlice.actions;\nexport default accountSlice.reducer;","map":{"version":3,"names":["createSlice","axios","createAsyncThunk","initialState","amount","getUserAccount","userId","thunkAPI","data","get","accountSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["E:/ReduxToolkit/src/slices/accountSlice.js"],"sourcesContent":["import { createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  amount: 1,\r\n};\r\n\r\nexport const getUserAccount = createAsyncThunk(\r\n  'account/getUser',\r\n  async (userId, thunkAPI) => {\r\n    const { data } = await axios.get(\r\n      `https://dummyjson.com/products /${userId}`\r\n    ); \r\n    return data.amount;\r\n  }\r\n);\r\n\r\nexport const accountSlice = createSlice({\r\n  name: 'account',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.amount += 1; //immer library\r\n    },\r\n    decrement: (state) => {\r\n      state.amount -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.amount += action.payload;\r\n    },\r\n  },\r\n//   extraReducers: (builder) => {\r\n//     builder\r\n//       .addCase(getUserAccount.fulfilled, (state, action) => {\r\n//         state.amount = action.payload;\r\n//         state.pending = false;\r\n//       })\r\n//       .addCase(getUserAccount.pending, (state, action) => {\r\n//         state.pending = true;\r\n//       })\r\n//       .addCase(getUserAccount.rejected, (state, action) => {\r\n//         state.error = action.error;\r\n//       });\r\n//   },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = accountSlice.actions;\r\n\r\nexport default accountSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAO,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,kBAAkB;AAEnD,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAC5C,iBAAiB,EACjB,OAAOI,MAAM,EAAEC,QAAQ,KAAK;EAC1B,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAC7B,mCAAkCH,MAAO,EAAC,CAC5C;EACD,OAAOE,IAAI,CAACJ,MAAM;AACpB,CAAC,CACF;AAED,OAAO,MAAMM,YAAY,GAAGV,WAAW,CAAC;EACtCW,IAAI,EAAE,SAAS;EACfR,YAAY;EACZS,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACV,MAAM,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC;;IACDW,SAAS,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACV,MAAM,IAAI,CAAC;IACnB,CAAC;IACDY,iBAAiB,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MACpCH,KAAK,CAACV,MAAM,IAAIa,MAAM,CAACC,OAAO;IAChC;EACF;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEL,SAAS;EAAEE,SAAS;EAAEC;AAAkB,CAAC,GAAGN,YAAY,CAACS,OAAO;AAE/E,eAAeT,YAAY,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}