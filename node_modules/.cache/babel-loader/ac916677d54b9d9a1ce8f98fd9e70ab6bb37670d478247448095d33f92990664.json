{"ast":null,"code":"import { createAction, createReducer } from '@reduxjs/toolkit';\nexport const increment = createAction('reward/increment');\nexport const incrementByAmount = createAction('reward/incrementByAmout');\nconst initialState = {\n  points: 15\n};\nconst rewardReducer = createReducer(initialState, builder => {\n  builder.addCase(increment, (state, action) => {\n    state.points++;\n  }).addCase(incrementByAmount, (state, action) => {\n    state.points += action.payload;\n  });\n});\nexport default rewardReducer;","map":{"version":3,"names":["createAction","createReducer","increment","incrementByAmount","initialState","points","rewardReducer","builder","addCase","state","action","payload"],"sources":["E:/ReduxToolkit/src/reducers/reward.js"],"sourcesContent":["import { createAction, createReducer } from '@reduxjs/toolkit'\r\n\r\nexport const increment = createAction('reward/increment');\r\nexport const incrementByAmount = createAction('reward/incrementByAmout');\r\n\r\nconst initialState = {\r\n    points: 15,\r\n  }\r\nconst rewardReducer = createReducer(initialState, (builder) => {\r\n    builder\r\n      .addCase(increment, (state, action) => {\r\n        state.points++\r\n      })\r\n      .addCase(incrementByAmount, (state, action) => {\r\n        state.points+=action.payload\r\n      })\r\n     \r\n  })\r\n\r\nexport default rewardReducer  "],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAE9D,OAAO,MAAMC,SAAS,GAAGF,YAAY,CAAC,kBAAkB,CAAC;AACzD,OAAO,MAAMG,iBAAiB,GAAGH,YAAY,CAAC,yBAAyB,CAAC;AAExE,MAAMI,YAAY,GAAG;EACjBC,MAAM,EAAE;AACV,CAAC;AACH,MAAMC,aAAa,GAAGL,aAAa,CAACG,YAAY,EAAGG,OAAO,IAAK;EAC3DA,OAAO,CACJC,OAAO,CAACN,SAAS,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;IACrCD,KAAK,CAACJ,MAAM,EAAE;EAChB,CAAC,CAAC,CACDG,OAAO,CAACL,iBAAiB,EAAE,CAACM,KAAK,EAAEC,MAAM,KAAK;IAC7CD,KAAK,CAACJ,MAAM,IAAEK,MAAM,CAACC,OAAO;EAC9B,CAAC,CAAC;AAEN,CAAC,CAAC;AAEJ,eAAeL,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}